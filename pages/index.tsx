import Head from 'next/head';
import styles from '@/styles/index.module.scss';
import {
  Button,
  Dialog,
  Toast,
  TextArea,
  ImageUploader,
  ImageUploadItem,
} from 'antd-mobile';
import axios from 'axios';
import { useState } from 'react';
import useCountDown from '@/hooks/useCountdown';
export default function Home() {
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [emailCode, setEmailCode] = useState('');

  const { text, time, startCountDown } = useCountDown(60);

  const [name, setName] = useState('');
  const [remark, setRemark] = useState('');
  const [imgUrl, setImgUrl] = useState('');

  const sendEmail = () => {
    if (email) {
      axios({
        method: 'POST',
        url: '/api/sendcode',
        data: {
          email,
          emailCode,
        },
      }).then(() => {
        startCountDown();
      });
    }
  };

  const upload = async (res: File) => {
    return new Promise<ImageUploadItem>((resolve) => {
      console.log(res);
      const img = new Image();
      img.src = URL.createObjectURL(res);

      console.log(res, img);

      img.onload = async () => {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = img.width;
        canvas.height = img.height;
        ctx?.drawImage(img, 0, 0, img.width, img.height);
        canvas.toBlob(
          async (blob) => {
            const file = new File(
              [blob as BlobPart],
              `23123123123.${blob!.type.split('/')[1]}`,
              { type: blob!.type }
            );
            const data = new FormData();
            data.append('file', file);
            try {
              const response = await axios({
                url: '/api/upload',
                method: 'post',
                data,
              });
              // console.log(response,`https://www.nfcmdx.top/api/${response.data.url}`)
              setImgUrl(response.data.url);
              resolve({
                url: `https://www.nfcmdx.top/images${response.data.url}`,
              });
            } catch (ex: any) {
              Toast.show(ex?.message);
            }
          },
          res.type,
          0.6
        );
      };
    });
  };
  const submitInfo = () => {
    // console.log(email,username,remark)
    if (!username || !email || !imgUrl || !remark) {
      Dialog.alert({
        content: '全部内容都要填写哦，检查一下吧！',
      });
      return;
    }
    Dialog.confirm({
      content:
        '上传的内容不得包含色情，反动等违反国家法律的内容，我们将对您上传的内容进行严格审核，确认提交吗？',
      onConfirm: async () => {
        await axios({
          method: 'post',
          url: '/api/submit/1',
          data: {
            work_name: name,
            listen: email,
            name: username,
            image_url: imgUrl,
            remark,
          },
        });
        Toast.show({
          icon: 'success',
          content: '提交成功',
          position: 'bottom',
        });
      },
    });
  };
  return (
    <>
      <Head>
        <title>五月的纪念-致未来</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div>
        <form className={styles.form}>
          <input
            onChange={({ target: { value } }) => {
              setUsername(value);
            }}
            type='text'
            placeholder='请输入你的昵称'
          />
          <input
            onChange={({ target: { value } }) => {
              setName(value);
            }}
            placeholder='请输入您作品的名字'
          />
          <input
            onChange={({ target: { value } }) => {
              setEmail(value);
            }}
            placeholder='请输入您的邮箱，后续我们将通过邮箱联系您！'
          />
          <div className={styles.email_code}>
            <input
              onChange={({ target: { value } }) => {
                setEmailCode(value);
              }}
              placeholder='请输入验证码！'
            />
            <Button disabled={time !== 0} onClick={sendEmail}>
              {text}
            </Button>
          </div>
          <TextArea
            onChange={(value) => {
              setRemark(value);
            }}
            placeholder='请输入对这张照片的简单描述'
          />
          <ImageUploader maxCount={1} upload={upload} />
          <Button block onClick={submitInfo} color='primary' size='large'>
            提交
          </Button>
        </form>
      </div>
    </>
  );
}
